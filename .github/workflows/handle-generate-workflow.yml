name: handle-generate-workflow

on:
  repository_dispatch:
    types: [generate_workflow]

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Write workflow file
        run: |
          mkdir -p "$(dirname "${{ github.event.client_payload.workflowFileName }}")"
          cat << 'EOF' > "${{ github.event.client_payload.workflowFileName }}"
          ${{ github.event.client_payload.workflowYml }}
          EOF

      - name: Merge and Write data file
        run: |
          mkdir -p "$(dirname "${{ github.event.client_payload.dataFileName }}")"
          payload="${{ github.event.client_payload.dataFileContent }}"
          # Read existing data file if present
          if [ -f "${{ github.event.client_payload.dataFileName }}" ]; then
            existing=$(cat "${{ github.event.client_payload.dataFileName }}")
          else
            existing=""
          fi
          # Combine existing and new entries
          echo "$existing" > merged.txt
          echo "$payload" >> merged.txt
          # Deduplicate by unix,id, preserving SENT over UNSENT
          awk -F',' 'BEGIN {OFS=","}
          {
            key = $1","$2
            if (!(key in seen) || $3 == "SENT") {
              seen[key] = $0
            }
          }
          END {
            for (k in seen) print seen[k]
          }' merged.txt > "${{ github.event.client_payload.dataFileName }}"
          rm merged.txt

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.SCRIBBLIT_READ_AND_WRITE_TO_REPO }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${{ github.event.client_payload.workflowFileName }}" "${{ github.event.client_payload.dataFileName }}"
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ci: update workflow and data for ${{ github.event.client_payload.dataFileName }}"
            git push origin HEAD:main
          fi